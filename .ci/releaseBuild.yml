name: UnixCompleters-Release-$(Build.BuildId)
trigger: none

pr: none

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1

resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance
    ref: master

stages:
- stage: Build
  displayName: Build
  pool:
    name: PowerShell1ES # Package ES CodeHub Lab E
    demands:
      - ImageOverride -equals PSMMS2019-Secure
  jobs:
  - job: Build_Job
    displayName: Build Microsoft.PowerShell.UnixCompleters
    variables:
    - group: ESRP
    steps:
    - checkout: self

    - pwsh: |
        Set-Location "$(Build.SourcesDirectory)"
        ./build.ps1 -Publish
        Get-ChildItem -Recurse -File -Name | Write-Verbose -Verbose
      displayName: Execute build

    - pwsh: |
        $signSrcPath = "$(Build.SourcesDirectory)"
        $moduleName = "PSUnixUtilCompleters"
        $moduleInfo = Import-PowerShellDataFile -Path "${moduleName}.psd1"
        $moduleVersion = $moduleInfo.ModuleVersion.ToString()
        $signSrcPath = "$(Build.SourcesDirectory)/out/${moduleName}"

        # Set signing src path variable
        $vstsCommandString = "vso[task.setvariable variable=signSrcPath]${signSrcPath}"
        Write-Host "##$vstsCommandString"

        $signOutPath = "$(Build.SourcesDirectory)/signed/${moduleName}
        $null = New-Item -ItemType Directory -Path $signOutPath
        # Set signing out path variable
        $vstsCommandString = "vso[task.setvariable variable=signOutPath]${signOutPath}"
        Write-Host "##$vstsCommandString"

        # Set path variable for guardian codesign validation
        $vstsCommandString = "vso[task.setvariable variable=GDN_CODESIGN_TARGETDIRECTORY]${signOutPath}"
        Write-Host "##$vstsCommandString"

      displayName: Setup variables for signing

    - checkout: ComplianceRepo

    - template: EsrpSign.yml@ComplianceRepo
      parameters:
        # the folder which contains the binaries to sign
        buildOutputPath: $(signSrcPath)
        # the location to put the signed output
        signOutputPath: $(signOutPath)
        # the certificate ID to use
        certificateId: "CP-230012"
        # the file pattern to use, comma separated
        pattern: '*.psm1,*.psd1,*.ps1xml,*.ps1,*.dll'

    - template: Sbom.yml@ComplianceRepo
      parameters:
        BuildDropPath: $(signOutPath)
        Build_Repository_Uri: 'https://github.com/powershell/UnixCompleters'

    - pwsh: |
        $noSignFiles = "zcomplete.sh","LICENSE.txt"
        $src = $env:signSrcPath
        $dst = $env:signOutPath
        foreach($file in $noSignFiles) {
          copy-item (Join-Path $src $file) (Join-Path $dst $file)
        }
      displayName: Copy unsigned files

    - pwsh: |
        $repoName = [guid]::newguid().ToString("N")
        $moduleName = "PSUnixUtilCompleters"
        try {
          Register-PSRepository -Name $repoName -SourceLocation '$(System.ArtifactsDirectory)' -ErrorAction Ignore
          Publish-Module -Repository $repoName -Path "$(Build.SourcesDirectory)/signed/${moduleName}"
          $nupkg = Get-ChildItem '$(System.ArtifactsDirectory)/*.nupkg'
          $nupkgName = $nupkg.Name
          $nupkgPath = $nupkg.FullName
          Write-Host "##vso[artifact.upload containerfolder=$nupkgName;artifactname=$nupkgName;]$nupkgPath"
        }
        finally {
          Unregister-PSRepository -Name $repoName -ErrorAction SilentlyContinue
        }
        Get-ChildItem -rec '$(System.ArtifactsDirectory)' | Write-Verbose -Verbose
        Get-ChildItem -rec -file | Write-Verbose -Verbose
      displayName: Create signed module nupkg

    - publish: "$(signSrcPath)"
      artifact: build
      displayName: Publish build

- stage: compliance
  displayName: Compliance
  dependsOn: Build
  jobs:
  - job: Compliance_Job
    pool:
      name: PowerShell1ES # Package ES CodeHub Lab E
    steps:
    - checkout: self
    - checkout: ComplianceRepo
    - download: current
      artifact: build

    - pwsh: |
        Get-ChildItem -Path "$(Pipeline.Workspace)\build" -Recurse
      displayName: Capture downloaded artifacts

    - template: script-module-compliance.yml@ComplianceRepo
      parameters:
        # component-governance
        sourceScanPath: '$(Build.SourcesDirectory)'
        # credscan
        suppressionsFile: ''
        # TermCheck
        optionsRulesDBPath: ''
        optionsFTPath: ''
        # tsa-upload
        codeBaseName: 'unassigned'
        # selections
        APIScan: false # set to false when not using Windows APIs.

